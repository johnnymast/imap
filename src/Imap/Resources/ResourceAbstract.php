<?php declare(strict_types=1);

namespace Redbox\Imap\Resources;

use Redbox\Imap\Client;
use Redbox\Imap\Transport\TCPRequest;
use Redbox\Imap\Utils\Factories\ResponseFactory;
use Redbox\Imap\Utils\Factories\TagFactory;

//Client Protocol Sender and Server Protocol Receiver
//
//   The client command begins an operation.  Each client command is
//   prefixed with an identifier (typically a short alphanumeric string,
//   e.g., A0001, A0002, etc.) called a "tag".  A different tag is
//   generated by the client for each command.
//
//Clients MUST follow the syntax outlined in this specification
//   strictly.  It is a syntax error to send a command with missing or
//extraneous spaces or arguments.
//
//There are two cases in which a line from the client does not
//   represent a complete command.  In one case, a command argument is
//   quoted with an octet count (see the description of literal in String
//   under Data Formats); in the other case, the command arguments require
//server feedback (see the AUTHENTICATE command).  In either case, the
//
//
//
//
//Crispin                     Standards Track                     [Page 6]
//
//RFC 3501                         IMAPv4                       March 2003
//
//
//   server sends a command continuation request response if it is ready
//   for the octets (if appropriate) and the remainder of the command.
//This response is prefixed with the token "+".
//
//Note: If instead, the server detected an error in the
//        command, it sends a BAD completion response with a tag
//        matching the command (as described below) to reject the
//        command and prevent the client from sending any more of the
//        command.
//
//        It is also possible for the server to send a completion
//        response for some other command (if multiple commands are
//        in progress), or untagged data.  In either case, the
//        command continuation request is still pending; the client
//        takes the appropriate action for the response, and reads
//        another response from the server.  In all cases, the client
//        MUST send a complete command (including receiving all
//        command continuation request responses and command
//        continuations for the command) before initiating a new
//command.
//
//The protocol receiver of an IMAP4rev1 server reads a command line
//   from the client, parses the command and its arguments, and transmits
//   server data and a server command completion result response.
//

/**
 * Class ResourceAbstract
 *
 * @package Redbox\Imap\Resources
 */
class ResourceAbstract
{
    /**
     * @var Client
     */
    private $client;

    /**
     * @var string
     */
    private $resource_name;

    /**
     * @var array|mixed
     */
    private $methods = [];

    /**
     * ResourceAbstract constructor.
     *
     * @param Client $client
     * @param string $resource_name
     * @param array $declaration
     */
    public function __construct(Client $client, $resource_name, $declaration = [])
    {
        $this->client = $client;
        $this->resource_name = $resource_name;
        $this->methods = $declaration['methods'] ?? [];
    }

    /**
     * Call and process the 'virtual' method as defined in Client.php
     *
     * @param string $method
     * @param array $arguments
     * @param array $body
     * @return mixed
     */
    public function call($method, $arguments = [], $body = [])
    {

        $options = $this->getClient()->getOptions();

        $tag = TagFactory::createTag('LOGIN '.$options['username'].' '.$options['password']);

        $this->client->getTransport()->send($tag);

        $input = $this->client->getTransport()->read();

        $response = ResponseFactory::parseResponse($tag->getPrefix(), $input);

        return $response;
    }

    /**
     * @return Client
     */
    public function getClient(): Client
    {
        return $this->client;
    }

    /**
     * @return string
     */
    public function getResourceName(): string
    {
        return $this->resource_name;
    }
}